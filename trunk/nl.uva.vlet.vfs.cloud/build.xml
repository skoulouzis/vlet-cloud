<project name="nl.uva.vlet.vfs.cloud" default="dist" basedir=".">
	<description>
        Project   : VLET/VBrowser
        Component : Cloud VDriver 
                
        Configuring: 
        ===
            - All configuration settings are in build.prop 
                
    </description>

	<!--
      1) Read global project properties (if specified) from: project.prop
         - for this to work project.root variable must be set to project root 
      2) Set environment properties prefix to 'env.' 
      3) Set vdriver.root to the location if this viewer 
      4) Read local viewers properties from: build.prop 
    -->
	<!-- default to eclipse build -->
	<property environment="env" />
	<property name="vdriver.root" location="." />
	<!-- default mbuild location -->
	<property name="project.root" value="../mbuild" />
	<property file="${project.root}/project.prop" />
	<property file="build.prop" />

	<!-- Target: init -->

	<target name="init">
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${vdriver.build}" />
		<mkdir dir="${vdriver.dist}" />
		<mkdir dir="${vdriver.dist}/lib" />
		<!-- <mkdir dir="${vdriver.dist}/lib" /> -->
	</target>

	<!-- Target: Config (configure this component) -->
	<target name="config">
	</target>

	<!-- Target: generate (create stubbers or other code) -->
	<target name="generate">
	</target>

	<!--
         Target: source-dist (Only needed when creating source distributions) 
      -->
	<target name="source-dist">
	</target>


	<path id="vdriver.classpath">
		<!-- include project libraries-->
		<fileset dir="${project.lib}">
			<include name="**/*.jar" />
		</fileset>

		<!-- Moved to seperate cloud project! -->
		<fileset dir="${vdriver.lib}">
			<include name="**/*.jar" />
		</fileset>

		<!-- add local paths settings -->

		<pathelement location="${vdriver.build}" />
		<pathelement location="${vdriver.src}" />

	</path>


	<!--
       <target name="source-dist" >
       </target> 
       
    
    <path id="vdriver.classpath">
        <!-- include project libraries--> 
        <fileset dir="${project.lib}">
             <include name="**/*.jar" />
         </fileset> 
        	
    	<!-- Moved to seperate cloud project! --> 
        <fileset dir="${vdriver.lib}">
             <include name="**/*.jar" />
         </fileset>
         
        <!-- add local paths settings --> 
                
        <pathelement location="${vdriver.build}" />
        <pathelement location="${vdriver.src}" />
            
    </path>
                
            
    <!--
        Target = Compilation 
    -->

	<target name="build" depends="init" description="compile the source ">
		<!-- Compile the java code from the ${src} into ${build} -->

		<javac srcdir="${vdriver.src}" destdir="${vdriver.build}" compiler="${javac.compiler}" debug="${javac.debug}" target="${javac.target}">
			<classpath refid="vdriver.classpath" />
		</javac>

	</target>

	<target name="jar" depends="build">
		<!-- Create application JAR file -->
		<jar jarfile="${vdriver.dist}/lib/${vdriver.name}.jar" basedir="${vdriver.build}">
			<!-- .. includes/excludes .. -->
		</jar>
	</target>

	<target name="dist" depends="build,jar">
	</target>

	<target name="vdriver-plugin-dist" depends="build,jar">

		<!-- 
          instead of an single jar file, the 
          vdriver distribution can also be a directory containing the 
          jar files needed for the vdriver. 
          The directory MUST have the name of the Main Viewer Class. 
          The jar file can have another name. 
          Optionally extra jars/file can be copied to this directory
        -->

		<property name="vdriver.dir" value="${vdriver.dist}/${vdriver.package}" />

		<mkdir dir="${vdriver.dir}" />

		<!-- Add extra files from etc -->
		<copy todir="${vdriver.dir}">
			<fileset dir="${vdriver.root}/etc" />
		</copy>

		<!-- Add external libs -->
		<copy todir="${vdriver.dir}">
			<fileset dir="${vdriver.root}/lib" />
		</copy>

		<!-- Add vdrivers libs  -->
		<copy todir="${vdriver.dir}">
			<fileset dir="${vdriver.dist}/lib" />
		</copy>

		<!-- create plugin.prop file -->
		<property name="plugininfo" value="${vdriver.dir}/plugin.prop" />
		<echo message="##${line.separator}#Plugin description for: ${vdriver.name}${line.separator}#${line.separator}" file="${plugininfo}" append="false" />

		<echo message="#Plugin name:${line.separator}vdriver.name=${vdriver.name}${line.separator}${line.separator}" file="${plugininfo}" append="true" />

		<echo message="#Plugin package name:${line.separator}vdriver.package=${vdriver.package}${line.separator}${line.separator}" file="${plugininfo}" append="true" />

		<echo message="#Plugin (VRS)Factory name (Must be subclass of VRSFactory which will be registered in the VRS Registry!):${line.separator}vdriver.factory=${vdriver.factory}${line.separator}${line.separator}" file="${plugininfo}" append="true" />

	</target>

	<!--
    *    Target: dist-install
    *    Info:
    *          Only used when component is part of the main project. 
    *        
    -->

	<target name="plugin-dist-install" depends="dist" description="install libraries">
		<fail message="*** Error: property 'project.root' not defined. Please start with '-Dproject.root=&lt;path&gt;' argument. " unless="project.env.ok" />
		<mkdir dir="${project.doc}" />
		<!-- install in lib/plugins/  -->
		<mkdir dir="${project.lib}/plugins" />

		<!-- Copy all-in-one package lib into project lib dir -->
		<!-- <copy file="${vdriver.dist}/${vdriver.package}.jar" todir="${project.dist}/lib/plugins" /> 
          -->

		<copy todir="${project.dist}/lib/plugins/${vdriver.package}">
			<fileset dir="${vdriver.dist}/${vdriver.package}" />
		</copy>
	</target>

	<target name="dist-install" depends="dist" description="install libraries">
		<fail message="*** Error: property 'project.root' not defined. Please start with '-Dproject.root=&lt;path&gt;' argument. " unless="project.env.ok" />

		<mkdir dir="${project.doc}" />
		<!-- install in lib/plugins/  -->

		<mkdir dir="${project.lib}/vdrivers" />
		<mkdir dir="${project.auxlib}/" />

		<!-- Copy all-in-one package lib into project lib dir -->
		<!-- <copy file="${vdriver.dist}/${vdriver.package}.jar" todir="${project.dist}/lib/plugins" /> 
	      -->

		<copy todir="${project.lib}/vdrivers">
			<fileset dir="${vdriver.dist}/lib" />
		</copy>

		<!-- <copy todir="${project.lib}/auxlib">
		  <fileset dir="${vdriver.root}/lib" /> 
		</copy> -->

	</target>


	<target name="clean" description="clean">
		<delete dir="${vdriver.dist}" />
		<delete dir="${vdriver.build}" />
	</target>

</project>


